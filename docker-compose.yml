networks:
  microservices_network:
    driver: bridge

services:
  gateway:
    build: ./gateway
    container_name: gateway
    privileged: true
    volumes:
      - ./gateway:/app
      - ./shared:/app/shared
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    environment:
      - SERVICE_CONTACT=http://service_contacts:5000
    ports:
      - "9000:5000"
    networks:
      - microservices_network
    depends_on:
      - service_contacts
      - service_transformer

  service_contacts:
    build: ./service_contacts
    container_name: service_contacts
    environment:
      - SERVICE_TRANSFORM=http://service_transformer:5000
      - SERVICE_CONNECT=http://service_connect:5000
      - QUEUE_SERVICE_URL=http://service_queue:5000
    volumes:
      - ./service_contacts:/app
      - ./shared:/app/shared
    ports:
      - "5001:5000"
    networks:
      - microservices_network
    restart: unless-stopped
    depends_on:
      - service_transformer
  

  service_projects:
    build: ./service_projects
    container_name: service_projects
    environment:
      - TRANSFORM_SERVICE_URL=http://service_transformer:5000
      - SERVICE_CONNECT=http://service_connect:5000
    volumes:
      - ./shared:/app/shared
      - ./service_projects:/app
    ports:
      - "5005:5000"
    networks:
      - microservices_network
    restart: unless-stopped
    depends_on:
      - service_transformer
      - service_connect
  
  service_contracts:
    build: ./service_contracts
    container_name: service_contracts
    environment:
      - TRANSFORM_SERVICE_URL=http://service_transformer:5000
      - SERVICE_CONNECT=http://service_connect:5000
    volumes:
      - ./service_contracts:/app
      - ./data/contracts:/app/data
      - ./shared:/app/shared
    ports:
      - "5009:5000"
    networks:
      - microservices_network
    restart: unless-stopped
    depends_on:
      - service_transformer


  service_debugger:
    build: ./service_debugger
    container_name: service_debugger
    environment:
      LOGS_DB_PATH: /app/data/logs.json
      EXCHANGES_DB_PATH: /app/data/exchanges.json
    volumes:
      - ./service_debugger:/app
      - ./data/debugger:/app/data
    ports:
      - "5006:5000"
    networks:
      - microservices_network
    restart: unless-stopped


  service_transformer:
    build: ./service_transformer
    container_name: service_transformer
    environment:
      - MAPPING_DIR=/app/mappings
      - SERVICE_CONNECT=http://service_connect:5000
    volumes:
      - ./data/transformer:/app/data
      - ./service_transformer:/app
      - ./shared:/app/shared
      - ./service_contacts:/service_contacts
      - ./service_projects:/service_projects  
      - ./service_contracts:/service_contracts
    ports:
      - "5002:5000"
    networks:
      - microservices_network
    restart: unless-stopped
  
 

  service_connect:
    build: ./service_connect
    container_name: service_connect
    environment:
      - OGGO_BASE_URL=http://mock-external-apis:5000
      - OGGO_API_KEY=mock-oggo-key
      - HUBSPOT_BASE_URL=http://mock-external-apis:5000
      - HUBSPOT_API_KEY=mock-hubspot-key
    volumes:
      - ./service_connect:/app
      - ./shared:/app/shared
    ports:
      - "5008:5000"
    networks:
      - microservices_network
    restart: unless-stopped
    depends_on:
      - mock-external-apis




  mock-external-apis:
    build: ./mock-external-apis
    container_name: mock-external-apis
    ports:
      - "3000:5000"
    networks:
      - microservices_network
    restart: unless-stopped
    volumes:
      - ./mock-external-apis:/app


  service_mapping:
    build: ./service_mapping
    container_name: service_mapping
    environment:
      - SERVICE_CONNECT=http://service_connect:5000
    volumes:
      - ./service_mapping:/app
      - ./service_contacts:/service_contacts
      - ./service_projects:/service_projects
      - ./service_contracts:/service_contracts
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "5004:5000"
    networks:
      - microservices_network
    restart: unless-stopped
    depends_on:
      - service_transformer
      - service_contacts
      - service_connect

  service_queue:
    build: ./service_queue
    container_name: service_queue
    volumes:
      - ./service_queue:/app
      - ./data/queue:/app/data
      - ./shared:/app/shared
    ports:
      - "5010:5000"
    networks:
      - microservices_network
    restart: unless-stopped